# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'register.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys, res
import sqlite3
import mysql.connector
import bcrypt
from datetime import datetime
import re
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLabel, QLineEdit, QPushButton
from PyQt5.QtCore import Qt




class UI_SignUp(object):


        def setupUi(self, Form):
                self.Form = Form
                Form.setObjectName("Form")
                Form.resize(400, 550)
                Form.setWindowFlags(QtCore.Qt.FramelessWindowHint)
                Form.setAttribute(QtCore.Qt.WA_TranslucentBackground)
                self.widget = QtWidgets.QWidget(Form)
                self.widget.setGeometry(QtCore.QRect(30, 30, 370, 480))
                titleBarLayout = QHBoxLayout()

                # Minimize Button
                self.minimizeButton = QPushButton('-')
                self.minimizeButton.clicked.connect(lambda: Form.showMinimized())
                titleBarLayout.addWidget(self.minimizeButton)

                # Close Button
                self.closeButton = QPushButton('X')
                self.closeButton.clicked.connect(lambda: Form.close())
                titleBarLayout.addWidget(self.closeButton)

                # Main layout
                mainLayout = QVBoxLayout(Form)
                mainLayout.addLayout(titleBarLayout)
                mainLayout.addWidget(self.widget)  # Assuming 'self.widget' is your main content widget

                Form.setLayout(mainLayout)
                self.widget.setStyleSheet("QPushButton #pushButton{\n"
                "background-color: qlineargradient(spread:pad, x1:0, y1:0.505682, x2:1, y2:0.477, stop:0 rgba(20, 47, 78, 219), stop: 1 rgba(85, 98, 112,226));\n"
                "\n"
                "color:rgba(255, 255, 255, 210);\n"
                "border-radius:5px;\n"
                "}\n"
                "QPushButton #pushButton:hover{\n"
                "background-color: qlineargradient(spread:pad, x1:0, y1:0.505682, x2:1, y2:0.477, stop:0 rgba(40, 67, 98, 219), stop: 1 rgba(105, 118, 132,226));\n"
                "}\n"
                "QPushButton #pushButton:pressed{\n"
                "padding-left:5px;\n"
                "padding-top:5px;\n"
                "background-color:rgba(105, 118, 132, 200);|\n"
                "}\n"
                "\n"
                "QPushButton #pushButton_3, #pushButton_4, #pushButton_6, #pushButton_5{\n"
                "\n"
                "background-color: rgba(0, 0, 0, 0);\n"
                "color:rgba(85, 98, 112, 255);\n"
                "}\n"
                "QPushButton #pushButton_6:hover, #pushButton_3:hover, #pushButton_4:hover, #pushButton_5:hover{ \n"
                "color:rgba(155, 168, 182, 220);\n"
                "}\n"
                "QPushButton #pushButton_6:pressed #pushButton_3:pressed, #pushButton_4:pressed, #pushButton_5:pressed{ \n"
                "padding-left:5px;\n"
                "padding-top:5px;\n"
                "color:rgba(115, 128, 142, 255);\n"
                "}")
                self.widget.setObjectName("widget")
                self.label = QtWidgets.QLabel(self.widget)
                self.label.setGeometry(QtCore.QRect(30, 30, 300, 420))
                self.label.setStyleSheet("border-image: url(:/images/672226c7e2cfa265f5e75344074ad62c.jpg);\n"
                "border-radius: 20px;\n"
                "")
                self.label.setText("")
                self.label.setObjectName("label")
                self.label_2 = QtWidgets.QLabel(self.widget)
                self.label_2.setGeometry(QtCore.QRect(30, 30, 300, 420))
                self.label_2.setStyleSheet("background-color:glineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.715909, stop:0 rgba(0, 0, 0, 9), stop:0.375 rgba(0, 0, 0, 50), stop:0.835227 rgba(0, 0, 0, 75)); \n"
                "border-radius:20px;")
                self.label_2.setText("")
                self.label_2.setObjectName("label_2")
                self.label_3 = QtWidgets.QLabel(self.widget)
                self.label_3.setGeometry(QtCore.QRect(40, 60, 280, 390))
                self.label_3.setStyleSheet("background-color:rgba(0,0,0,100);\n"
                "border-radius:15px;")
                self.label_3.setText("")
                self.label_3.setObjectName("label_3")
                self.label_4 = QtWidgets.QLabel(self.widget)
                self.label_4.setGeometry(QtCore.QRect(100, 100, 181, 40))
                font = QtGui.QFont()
                font.setPointSize(20)
                font.setBold(True)
                font.setWeight(75)
                self.label_4.setFont(font)
                self.label_4.setStyleSheet("color:rgba(255,255,255,210)")
                self.label_4.setObjectName("label_4")
                self.pushButton = QtWidgets.QPushButton(self.widget)
                self.pushButton.setGeometry(QtCore.QRect(70, 400, 200, 30))
                font = QtGui.QFont()
                font.setPointSize(12)
                font.setBold(True)
                font.setWeight(75)
                self.pushButton.setFont(font)
                self.pushButton.setObjectName("pushButton")
                self.pushButton.clicked.connect(self.showLogin)
                self.pushButton_2 = QtWidgets.QPushButton(self.widget)
                self.pushButton_2.setGeometry(QtCore.QRect(70, 350, 200, 30))
                font = QtGui.QFont()
                font.setPointSize(12)
                font.setBold(True)
                font.setWeight(75)
                self.pushButton_2.setFont(font)
                self.pushButton_2.setObjectName("pushButton_2")
                self.pushButton_2.clicked.connect(self.handleSignUp)

                self.lineEdit_3 = QtWidgets.QLineEdit(self.widget)
                self.lineEdit_3.setGeometry(QtCore.QRect(80, 210, 200, 40))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.lineEdit_3.setFont(font)
                self.lineEdit_3.setStyleSheet("background-color:rgba(0, 0, 0, 0); \n"
                "border:none;\n"
                "border-bottom: 2px solid rgba(105, 118, 132, 255);\n"
                "color:rgba(255, 255, 255, 230);\n"
                "padding-bottom:7px;")
                self.lineEdit_3.setObjectName("lineEdit_3")
                self.lineEdit_4 = QtWidgets.QLineEdit(self.widget)
                self.lineEdit_4.setGeometry(QtCore.QRect(80, 170, 200, 40))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.lineEdit_4.setFont(font)
                self.lineEdit_4.setStyleSheet("background-color:rgba(0, 0, 0, 0); \n"
                "border:none;\n"
                "border-bottom: 2px solid rgba(105, 118, 132, 255);\n"
                "color:rgba(255, 255, 255, 230);\n"
                "padding-bottom:7px;")
                self.lineEdit_4.setObjectName("lineEdit_4")
                self.lineEdit_5 = QtWidgets.QLineEdit(self.widget)
                self.lineEdit_5.setGeometry(QtCore.QRect(80, 250, 200, 40))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.lineEdit_5.setFont(font)
                self.lineEdit_5.setStyleSheet("background-color:rgba(0, 0, 0, 0); \n"
                "border:none;\n"
                "border-bottom: 2px solid rgba(105, 118, 132, 255);\n"
                "color:rgba(255, 255, 255, 230);\n"
                "padding-bottom:7px;")
                self.lineEdit_5.setObjectName("lineEdit_5")
                self.lineEdit_5.setEchoMode(QtWidgets.QLineEdit.Password)
                self.lineEdit_6 = QtWidgets.QLineEdit(self.widget)
                self.lineEdit_6.setGeometry(QtCore.QRect(80, 290, 200, 40))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.lineEdit_6.setFont(font)
                self.lineEdit_6.setStyleSheet("background-color:rgba(0, 0, 0, 0); \n"
                "border:none;\n"
                "border-bottom: 2px solid rgba(105, 118, 132, 255);\n"
                "color:rgba(255, 255, 255, 230);\n"
                "padding-bottom:7px;")
                self.lineEdit_6.setObjectName("lineEdit_6")
                self.lineEdit_6.setEchoMode(QtWidgets.QLineEdit.Password)

                self.label.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=0, yOffset=0, color=QtGui.QColor(234,221,186,100)))
                self.label_3.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=0, yOffset=0, color=QtGui.QColor(105,118,132,100)))
                self.pushButton.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=3, yOffset=3, color=QtGui.QColor(105,118,132,100)))

                self.retranslateUi(Form)
                QtCore.QMetaObject.connectSlotsByName(Form)

        def retranslateUi(self, Form):
                _translate = QtCore.QCoreApplication.translate
                Form.setWindowTitle(_translate("Form", "Form"))
                self.label_4.setText(_translate("Form", "SIGN UP"))
                self.pushButton.setText(_translate("Form", "LOGIN"))
                self.pushButton_2.setText(_translate("Form", "SIGN UP"))
                self.lineEdit_3.setPlaceholderText(_translate("Form", "Username"))
                self.lineEdit_4.setPlaceholderText(_translate("Form", "Email"))
                self.lineEdit_5.setPlaceholderText(_translate("Form", "Password"))
                self.lineEdit_6.setPlaceholderText(_translate("Form", "Confirm Password"))

        def validate_email(self,email):
                
                pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'

                # Use the re.match function to check if the email matches the pattern
                if re.match(pattern, email):
                        return True
                else:
                        return False
        
        def duplicate_email(self,email):
                host = "localhost"
                user = "root"
                password = ""
                database = "fittrackpro"

                # Create a connection to the database
                connection = mysql.connector.connect(
                host=host,
                user=user,
                password=password,
                database=database
                )
                cursor = connection.cursor()
                query = "SELECT * FROM User WHERE email = %s"
                cursor.execute(query,(email,))
                result = cursor.fetchone()
                if result:
                        return True
                return False
        
        def validate_username(self,username):
                host = "localhost"
                user = "root"
                password = ""
                database = "fittrackpro"

                # Create a connection to the database
                connection = mysql.connector.connect(
                host=host,
                user=user,
                password=password,
                database=database
                )
                cursor = connection.cursor()
                query = "SELECT * FROM User WHERE username = %s"
                cursor.execute(query,(username,))
                result = cursor.fetchone()
                if result:
                        return True
                return False


        def handleSignUp(self):
                username = self.lineEdit_3.text()
                email = self.lineEdit_4.text()
                password = self.lineEdit_5.text()
                confirm_password = self.lineEdit_6.text()
                date_R = datetime.today().strftime('%Y-%m-%d %H:%M:%S')

                if not username.strip() or not email.strip() or not password.strip() or not confirm_password.strip():
                        QtWidgets.QMessageBox.warning(self.widget, 'Error', 'One or more field are empty')
                        return
                
                if self.validate_username(username):
                        QtWidgets.QMessageBox.warning(self.widget, 'Error', 'Username Already Taken')
                        return

                # Check if passwords match
                if password != confirm_password:
                        # Show an error message
                        QtWidgets.QMessageBox.warning(self.widget, 'Error', 'Passwords do not match')
                        return

                if not self.validate_email(email):
                        QtWidgets.QMessageBox.warning(self.widget, 'Error', 'Enter a valid email')
                        return
                
                if self.duplicate_email(email):
                        QtWidgets.QMessageBox.warning(self.widget, 'Error', 'Email Already Taken')
                        return


                # Hash the password
                hashed_password = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt())

                # Connect to the database and insert data
                conn = mysql.connector.connect(
                        database = "fittrackpro",
                        host="localhost",
                        user="root",
                        password=""
                        )
                cursor = conn.cursor()


                insert_query = "INSERT INTO User (username, email, PasswordHash, RegistrationDate) VALUES (%s, %s, %s, %s)"
                cursor.execute(insert_query, (username, email, hashed_password, date_R))

                # Commit and close
                conn.commit()
                conn.close()

                QtWidgets.QMessageBox.information(self.widget, 'Success', 'Sign Up Successful')



                self.showLogin
        def showLogin(self):
                from loginUI import LoginForm
                login_form = QtWidgets.QWidget()

                # Create an instance of the Ui_LoginForm class
                ui = LoginForm()

                # Set up the UI on the login_form widget
                ui.setupUi(login_form)

                # Show the login form
                login_form.show()
                self.Form.hide()



if __name__ == "__main__":
        app = QtWidgets.QApplication(sys.argv)
        Form = QtWidgets.QWidget()
        ui = UI_SignUp()
        ui.setupUi(Form)
        Form.show()
        sys.exit(app.exec_())